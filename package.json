{
  "name": "virtual-pos",
  "version": "1.0.0",
  "description": "viRtual POS - Visual Interface Resource Technology Unified Analytics Labs",
  "private": true,
  "type": "module",
  "scripts": {
    "dev": "vite",
    "dev:server": "npm --prefix server start",
    "dev:server:fast": "npm --prefix server run dev:fast",
    "dev:client": "cross-env VITE_API_BASE_URL=http://localhost:8250 vite --host --port 5173",
    "dev:all": "concurrently -k -n server,client -c green,blue \"npm --prefix server start\" \"cross-env VITE_API_BASE_URL=http://localhost:8250 vite --host --port 5173\"",
    "dev:all:fast": "concurrently -k -n server,client -c green,blue \"npm --prefix server run dev:fast\" \"cross-env VITE_API_BASE_URL=http://localhost:8250 vite --host --port 5173\"",
    "build": "tsc && vite build",
    "build:all": "npm --prefix server run build && npm run build:prod",
    "build:prod": "vite build",
    "start:prod": "npm --prefix server run start:prod",
    "start:all:prod": "concurrently -k -n server,client -c green,blue \"npm --prefix server run start:prod\" \"npm run serve:prod\"",
    "preview": "vite preview",
    "serve:prod": "vite preview --host --port 8080",
    "check:health": "curl -f http://localhost:8250/health || echo 'Server not running'",
    "check:ready": "curl -f http://localhost:8250/api/health/ready || echo 'Server not ready'",
    "check:integrity": "curl -f http://localhost:8250/api/health/integrity || echo 'Integrity check failed'",
    "check:all": "npm run check:health && curl -f http://localhost:5173 || echo 'Frontend not running'",
    "check:full": "npm run check:health && npm run check:ready && npm run check:integrity",
    "setup": "npm install && npm --prefix server install && npm run build:all",
    "reset": "npm run qa:reset",
    "lint": "eslint . --ext ts,tsx --report-unused-disable-directives --max-warnings 0",
    "lint:fix": "eslint . --ext ts,tsx --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "type-check": "tsc --noEmit",
    "test": "vitest",
    "test:ui": "vitest --ui",
    "test:run": "vitest run",
    "test:coverage": "vitest run --coverage",
    "test:a11y": "playwright test tests/a11y/",
    "test:a11y:ui": "playwright test tests/a11y/ --ui",
    "test:a11y:report": "playwright test tests/a11y/ --reporter=html",
    "test:performance": "playwright test tests/performance/",
    "test:performance:ui": "playwright test tests/performance/ --ui",
    "test:performance:report": "playwright test tests/performance/ --reporter=html",
    "test:vr": "playwright test tests/visual/",
    "test:vr:ui": "playwright test tests/visual/ --ui",
    "test:vr:report": "playwright test tests/visual/ --reporter=html",
    "test:vr:update": "playwright test tests/visual/ --update-snapshots",
    "test:design-tokens": "node scripts/test-design-tokens.js",
    "lint:design-tokens": "eslint . --ext ts,tsx --rule 'design-tokens/no-raw-colors: error' --rule 'design-tokens/no-raw-spacing: error' --rule 'design-tokens/no-raw-font-sizes: error' --rule 'design-tokens/no-raw-border-radius: error'",
    "e2e": "playwright test",
    "e2e:ui": "playwright test --ui",
    "e2e:install": "playwright install",
    "qa:prep": "tsx scripts/qa.seed.ts",
    "qa:reset": "tsx scripts/qa.reset.ts",
    "qa:e2e": "playwright test",
    "qa:ui": "playwright test --ui",
    "qa:smoke": "vitest run tests/smoke --coverage=false",
    "qa:full": "npm run qa:reset && npm run qa:smoke && npm run qa:e2e",
    "qa:manual": "npm run qa:prep && echo 'QA environment ready. Open docs/QA_CHECKLIST.md for manual testing.'",
    "qa:quick-sales": "npx tsx scripts/qa-quick-sales-final.ts",
    "release:check": "tsx scripts/healthcheck.ts",
    "release:notes": "tsx scripts/changelog.generate.ts",
    "version:bump": "tsx scripts/version.bump.ts",
    "docker:build": "docker build -t virtual-pos:latest .",
    "docker:run": "docker run -p 8080:80 --env-file .env --name virtual-pos virtual-pos:latest",
    "docker:stop": "docker stop virtual-pos && docker rm virtual-pos",
    "compose:up": "docker compose up -d",
    "compose:down": "docker compose down",
    "compose:logs": "docker compose logs -f virtual-pos",
    "deploy:dev": "npm run dev:all:fast",
    "deploy:prod": "npm run build:all && npm run start:all:prod",
    "deploy:check": "npm run check:full",
    "deploy:reset": "npm run qa:reset && npm run deploy:dev",
    "quick:start": "npm run dev:all",
    "quick:build": "npm run build:all",
    "quick:check": "npm run check:health",
    "logs:verify": "scripts/verify-log-rotation.sh",
    "logs:verify:win": "scripts\\verify-log-rotation.bat",
    "logs:rotate": "logrotate -f /etc/logrotate.d/pos-grocery",
    "logs:clean": "find /var/log/pos/ -name '*.log.*' -mtime +30 -delete",
    "logs:size": "du -sh /var/log/pos/ /opt/pos-grocery/server/logs/ 2>/dev/null || echo 'Log directories not found'",
    "startup:metrics": "curl -s http://localhost:8250/api/health/startup | jq '.'",
    "startup:sla": "curl -s http://localhost:8250/api/health/startup | jq '.metrics.sla'",
    "startup:performance": "curl -s http://localhost:8250/api/health/startup | jq '.metrics.performance'",
    "startup:check": "curl -f http://localhost:8250/api/health/startup || echo 'Startup metrics check failed'",
    "startup:monitor": "watch -n 5 'curl -s http://localhost:8250/api/health/startup | jq \".metrics.startup.totalStartupTime, .metrics.sla.meetsSLA\"'"
  },
  "dependencies": {
    "@types/react-window": "^1.8.8",
    "better-sqlite3": "^12.4.1",
    "clsx": "^2.0.0",
    "dexie": "^4.2.1",
    "i18next": "^25.6.0",
    "i18next-browser-languagedetector": "^8.2.0",
    "i18next-http-backend": "^3.0.2",
    "lucide-react": "^0.294.0",
    "node-fetch": "^2.7.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-hot-toast": "^2.4.1",
    "react-i18next": "^16.0.0",
    "react-router-dom": "^6.20.1",
    "react-window": "^2.2.0",
    "sonner": "^2.0.7",
    "sqlite3": "^5.1.7",
    "tailwind-merge": "^2.0.0",
    "xlsx": "^0.18.5",
    "zustand": "^4.4.7"
  },
  "devDependencies": {
    "@axe-core/playwright": "^4.10.2",
    "@axe-core/react": "^4.10.2",
    "@playwright/test": "^1.40.0",
    "@testing-library/dom": "^10.4.1",
    "@testing-library/jest-dom": "^6.8.0",
    "@testing-library/react": "^16.3.0",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.10.0",
    "@typescript-eslint/parser": "^6.10.0",
    "@typescript-eslint/utils": "^8.46.0",
    "@vitejs/plugin-react": "^4.1.1",
    "@vitest/coverage-v8": "^0.34.6",
    "@vitest/ui": "^0.34.6",
    "autoprefixer": "^10.4.16",
    "concurrently": "^9.2.1",
    "cross-env": "^10.1.0",
    "eslint": "^8.53.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-react-refresh": "^0.4.4",
    "jest-axe": "^10.0.0",
    "jsdom": "^23.0.1",
    "postcss": "^8.4.31",
    "prettier": "^3.0.3",
    "prettier-plugin-tailwindcss": "^0.5.7",
    "tailwindcss": "^3.3.5",
    "tsx": "^4.6.0",
    "typescript": "^5.2.2",
    "vite": "^4.5.0",
    "vitest": "^0.34.6",
    "web-vitals": "^5.1.0"
  }
}
